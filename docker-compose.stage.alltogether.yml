version: '3.8'
services:
  lifetracker-iohandler:
    #restart: on-failure
    build:
      context: ./
      dockerfile: ./src/Executables/TelegramBot.IOHandler/Dockerfile
    ports:
      - 5000:5000
    depends_on:
      - redis
      - rabbitmq
    links:
      - redis
      - rabbitmq    
    networks:
      - rabbitmq_go_net
  lifetracker-handlers:
    #restart: on-failure
    build:
      context: ./
      dockerfile: ./src/Executables/TelegramBot.Handlers/Dockerfile
    depends_on:
      - redis
      - rabbitmq
    links:
      - redis
      - rabbitmq    
    networks:
      - rabbitmq_go_net
  lifetracker-jobexecutor:
    #restart: on-failure
    build:
      context: ./
      dockerfile: ./src/Executables/JobExecutor/Dockerfile
    depends_on:
      - redis
      - rabbitmq
    links:
      - redis
      - rabbitmq    
    networks:
      - rabbitmq_go_net
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    # volumes:
    #     - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
    #     - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - rabbitmq_go_net
  redis:
    image: redis:6.2-alpine
    networks:
      - rabbitmq_go_net
    #restart: always
    ports:
      - '6379:6379'
    # command: ["redis-server", "--bind", "redis", "--port", "6379"]
  # mssql:
  #   image: mcr.microsoft.com/mssql/server:2019-latest
  #   ports:
  #     - 1432:1433
  #   volumes:
  #     - ~/apps/mssql/data:/var/lib/mssqlql/data
  #   environment:
  #     - ACCEPT_EULA=Y
  #     - SA_PASSWORD=mssql1Ipw
  #   networks:
  #     - rabbitmq_go_net
#volumes:
#  cache:
#    driver: local
networks:
  rabbitmq_go_net:
    driver: bridge